
Digital Voltmeter.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000024  00800100  00000bee  00000c62  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000bee  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000c86  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000cb8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000c0  00000000  00000000  00000cf8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000010a9  00000000  00000000  00000db8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000009a8  00000000  00000000  00001e61  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000696  00000000  00000000  00002809  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000160  00000000  00000000  00002ea0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000062f  00000000  00000000  00003000  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000005fa  00000000  00000000  0000362f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000080  00000000  00000000  00003c29  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b1 00 	jmp	0x162	; 0x162 <__ctors_end>
   4:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
   8:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
   c:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  10:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  14:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  18:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  1c:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  20:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  24:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  28:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  2c:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  30:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  34:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  38:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  3c:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  40:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  44:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  48:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  4c:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  50:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  54:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  58:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  5c:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  60:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  64:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	00 40       	sbci	r16, 0x00	; 0
  6a:	7a 10       	cpse	r7, r10
  6c:	f3 5a       	subi	r31, 0xA3	; 163
  6e:	00 a0       	ldd	r0, Z+32	; 0x20
  70:	72 4e       	sbci	r23, 0xE2	; 226
  72:	18 09       	sbc	r17, r8
  74:	00 10       	cpse	r0, r0
  76:	a5 d4       	rcall	.+2378   	; 0x9c2 <__stack+0xc3>
  78:	e8 00       	.word	0x00e8	; ????
  7a:	00 e8       	ldi	r16, 0x80	; 128
  7c:	76 48       	sbci	r23, 0x86	; 134
  7e:	17 00       	.word	0x0017	; ????
  80:	00 e4       	ldi	r16, 0x40	; 64
  82:	0b 54       	subi	r16, 0x4B	; 75
  84:	02 00       	.word	0x0002	; ????
  86:	00 ca       	rjmp	.-3072   	; 0xfffff488 <__eeprom_end+0xff7ef488>
  88:	9a 3b       	cpi	r25, 0xBA	; 186
  8a:	00 00       	nop
  8c:	00 e1       	ldi	r16, 0x10	; 16
  8e:	f5 05       	cpc	r31, r5
  90:	00 00       	nop
  92:	80 96       	adiw	r24, 0x20	; 32
  94:	98 00       	.word	0x0098	; ????
  96:	00 00       	nop
  98:	40 42       	sbci	r20, 0x20	; 32
  9a:	0f 00       	.word	0x000f	; ????
  9c:	00 00       	nop
  9e:	a0 86       	std	Z+8, r10	; 0x08
  a0:	01 00       	.word	0x0001	; ????
  a2:	00 00       	nop
  a4:	10 27       	eor	r17, r16
  a6:	00 00       	nop
  a8:	00 00       	nop
  aa:	e8 03       	fmulsu	r22, r16
  ac:	00 00       	nop
  ae:	00 00       	nop
  b0:	64 00       	.word	0x0064	; ????
  b2:	00 00       	nop
  b4:	00 00       	nop
  b6:	0a 00       	.word	0x000a	; ????
  b8:	00 00       	nop
  ba:	00 00       	nop
  bc:	01 00       	.word	0x0001	; ????
  be:	00 00       	nop
  c0:	00 00       	nop
  c2:	2c 76       	andi	r18, 0x6C	; 108
  c4:	d8 88       	ldd	r13, Y+16	; 0x10
  c6:	dc 67       	ori	r29, 0x7C	; 124
  c8:	4f 08       	sbc	r4, r15
  ca:	23 df       	rcall	.-442    	; 0xffffff12 <__eeprom_end+0xff7eff12>
  cc:	c1 df       	rcall	.-126    	; 0x50 <__SREG__+0x11>
  ce:	ae 59       	subi	r26, 0x9E	; 158
  d0:	e1 b1       	in	r30, 0x01	; 1
  d2:	b7 96       	adiw	r30, 0x27	; 39
  d4:	e5 e3       	ldi	r30, 0x35	; 53
  d6:	e4 53       	subi	r30, 0x34	; 52
  d8:	c6 3a       	cpi	r28, 0xA6	; 166
  da:	e6 51       	subi	r30, 0x16	; 22
  dc:	99 76       	andi	r25, 0x69	; 105
  de:	96 e8       	ldi	r25, 0x86	; 134
  e0:	e6 c2       	rjmp	.+1484   	; 0x6ae <__mulsf3_pse+0x84>
  e2:	84 26       	eor	r8, r20
  e4:	eb 89       	ldd	r30, Y+19	; 0x13
  e6:	8c 9b       	sbis	0x11, 4	; 17
  e8:	62 ed       	ldi	r22, 0xD2	; 210
  ea:	40 7c       	andi	r20, 0xC0	; 192
  ec:	6f fc       	.word	0xfc6f	; ????
  ee:	ef bc       	out	0x2f, r14	; 47
  f0:	9c 9f       	mul	r25, r28
  f2:	40 f2       	brcs	.-112    	; 0x84 <__trampolines_end+0x1c>
  f4:	ba a5       	ldd	r27, Y+42	; 0x2a
  f6:	6f a5       	ldd	r22, Y+47	; 0x2f
  f8:	f4 90       	lpm	r15, Z
  fa:	05 5a       	subi	r16, 0xA5	; 165
  fc:	2a f7       	brpl	.-54     	; 0xc8 <__trampolines_end+0x60>
  fe:	5c 93       	st	X, r21
 100:	6b 6c       	ori	r22, 0xCB	; 203
 102:	f9 67       	ori	r31, 0x79	; 121
 104:	6d c1       	rjmp	.+730    	; 0x3e0 <__divsf3x+0x2>
 106:	1b fc       	.word	0xfc1b	; ????
 108:	e0 e4       	ldi	r30, 0x40	; 64
 10a:	0d 47       	sbci	r16, 0x7D	; 125
 10c:	fe f5       	brtc	.+126    	; 0x18c <__bad_interrupt>
 10e:	20 e6       	ldi	r18, 0x60	; 96
 110:	b5 00       	.word	0x00b5	; ????
 112:	d0 ed       	ldi	r29, 0xD0	; 208
 114:	90 2e       	mov	r9, r16
 116:	03 00       	.word	0x0003	; ????
 118:	94 35       	cpi	r25, 0x54	; 84
 11a:	77 05       	cpc	r23, r7
 11c:	00 80       	ld	r0, Z
 11e:	84 1e       	adc	r8, r20
 120:	08 00       	.word	0x0008	; ????
 122:	00 20       	and	r0, r0
 124:	4e 0a       	sbc	r4, r30
 126:	00 00       	nop
 128:	00 c8       	rjmp	.-4096   	; 0xfffff12a <__eeprom_end+0xff7ef12a>
 12a:	0c 33       	cpi	r16, 0x3C	; 60
 12c:	33 33       	cpi	r19, 0x33	; 51
 12e:	33 0f       	add	r19, r19
 130:	98 6e       	ori	r25, 0xE8	; 232
 132:	12 83       	std	Z+2, r17	; 0x02
 134:	11 41       	sbci	r17, 0x11	; 17
 136:	ef 8d       	ldd	r30, Y+31	; 0x1f
 138:	21 14       	cp	r2, r1
 13a:	89 3b       	cpi	r24, 0xB9	; 185
 13c:	e6 55       	subi	r30, 0x56	; 86
 13e:	16 cf       	rjmp	.-468    	; 0xffffff6c <__eeprom_end+0xff7eff6c>
 140:	fe e6       	ldi	r31, 0x6E	; 110
 142:	db 18       	sub	r13, r11
 144:	d1 84       	ldd	r13, Z+9	; 0x09
 146:	4b 38       	cpi	r20, 0x8B	; 139
 148:	1b f7       	brvc	.-58     	; 0x110 <__trampolines_end+0xa8>
 14a:	7c 1d       	adc	r23, r12
 14c:	90 1d       	adc	r25, r0
 14e:	a4 bb       	out	0x14, r26	; 20
 150:	e4 24       	eor	r14, r4
 152:	20 32       	cpi	r18, 0x20	; 32
 154:	84 72       	andi	r24, 0x24	; 36
 156:	5e 22       	and	r5, r30
 158:	81 00       	.word	0x0081	; ????
 15a:	c9 f1       	breq	.+114    	; 0x1ce <ADC_readChannel+0xe>
 15c:	24 ec       	ldi	r18, 0xC4	; 196
 15e:	a1 e5       	ldi	r26, 0x51	; 81
 160:	3d 27       	eor	r19, r29

00000162 <__ctors_end>:
 162:	11 24       	eor	r1, r1
 164:	1f be       	out	0x3f, r1	; 63
 166:	cf ef       	ldi	r28, 0xFF	; 255
 168:	d8 e0       	ldi	r29, 0x08	; 8
 16a:	de bf       	out	0x3e, r29	; 62
 16c:	cd bf       	out	0x3d, r28	; 61

0000016e <__do_copy_data>:
 16e:	11 e0       	ldi	r17, 0x01	; 1
 170:	a0 e0       	ldi	r26, 0x00	; 0
 172:	b1 e0       	ldi	r27, 0x01	; 1
 174:	ee ee       	ldi	r30, 0xEE	; 238
 176:	fb e0       	ldi	r31, 0x0B	; 11
 178:	02 c0       	rjmp	.+4      	; 0x17e <__do_copy_data+0x10>
 17a:	05 90       	lpm	r0, Z+
 17c:	0d 92       	st	X+, r0
 17e:	a4 32       	cpi	r26, 0x24	; 36
 180:	b1 07       	cpc	r27, r17
 182:	d9 f7       	brne	.-10     	; 0x17a <__do_copy_data+0xc>
 184:	0e 94 7f 01 	call	0x2fe	; 0x2fe <main>
 188:	0c 94 f5 05 	jmp	0xbea	; 0xbea <_exit>

0000018c <__bad_interrupt>:
 18c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000190 <ADC_init>:
 */ 


#include "ADC.h"

void ADC_init(const ADC_ConfigType *config_ptr ) {
 190:	cf 93       	push	r28
 192:	df 93       	push	r29
 194:	dc 01       	movw	r26, r24
	
	
	SET_BIT(ADCSRA,ADEN); // Enable ADC
 196:	ea e7       	ldi	r30, 0x7A	; 122
 198:	f0 e0       	ldi	r31, 0x00	; 0
 19a:	90 81       	ld	r25, Z
 19c:	90 68       	ori	r25, 0x80	; 128
 19e:	90 83       	st	Z, r25

	ADMUX  |= (config_ptr->ref_volt) & 0xC0; // Set Reference Voltage
 1a0:	cc e7       	ldi	r28, 0x7C	; 124
 1a2:	d0 e0       	ldi	r29, 0x00	; 0
 1a4:	28 81       	ld	r18, Y
 1a6:	9c 91       	ld	r25, X
 1a8:	90 7c       	andi	r25, 0xC0	; 192
 1aa:	92 2b       	or	r25, r18
 1ac:	98 83       	st	Y, r25
	
	ADCSRA |= (config_ptr->prescaler) & 0x07; // Set Frequency Prescaler
 1ae:	90 81       	ld	r25, Z
 1b0:	11 96       	adiw	r26, 0x01	; 1
 1b2:	8c 91       	ld	r24, X
 1b4:	87 70       	andi	r24, 0x07	; 7
 1b6:	89 2b       	or	r24, r25
 1b8:	80 83       	st	Z, r24

}
 1ba:	df 91       	pop	r29
 1bc:	cf 91       	pop	r28
 1be:	08 95       	ret

000001c0 <ADC_readChannel>:

uint16_t ADC_readChannel(ADC_ChannelID channel_id) {

	uint16_t retValue = 0;
	
	ADMUX |= (channel_id) & 0x1F; // Select Channel;
 1c0:	ec e7       	ldi	r30, 0x7C	; 124
 1c2:	f0 e0       	ldi	r31, 0x00	; 0
 1c4:	90 81       	ld	r25, Z
 1c6:	8f 71       	andi	r24, 0x1F	; 31
 1c8:	98 2b       	or	r25, r24
 1ca:	90 83       	st	Z, r25
	
	SET_BIT(ADCSRA,ADSC); // Start Conversation 
 1cc:	ea e7       	ldi	r30, 0x7A	; 122
 1ce:	f0 e0       	ldi	r31, 0x00	; 0
 1d0:	80 81       	ld	r24, Z
 1d2:	80 64       	ori	r24, 0x40	; 64
 1d4:	80 83       	st	Z, r24
	
	while(BIT_IS_CLEAR(ADCSRA,ADIF)); // Loop until conversation is done
 1d6:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 1da:	84 ff       	sbrs	r24, 4
 1dc:	fc cf       	rjmp	.-8      	; 0x1d6 <ADC_readChannel+0x16>
	
	SET_BIT(ADCSRA,ADIF); // Clear Bit
 1de:	ea e7       	ldi	r30, 0x7A	; 122
 1e0:	f0 e0       	ldi	r31, 0x00	; 0
 1e2:	80 81       	ld	r24, Z
 1e4:	80 61       	ori	r24, 0x10	; 16
 1e6:	80 83       	st	Z, r24
	
	retValue = ADC;
 1e8:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 1ec:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
	
	return retValue;
	
}
 1f0:	08 95       	ret

000001f2 <LCD_sendCommand>:
	
}

void LCD_sendCommand(uint8_t command)
{
	CLEAR_BIT(LCD_CTRL_PORT_OUT,RS);
 1f2:	98 b1       	in	r25, 0x08	; 8
 1f4:	9e 7f       	andi	r25, 0xFE	; 254
 1f6:	98 b9       	out	0x08, r25	; 8
	CLEAR_BIT(LCD_CTRL_PORT_OUT,RW);
 1f8:	98 b1       	in	r25, 0x08	; 8
 1fa:	9d 7f       	andi	r25, 0xFD	; 253
 1fc:	98 b9       	out	0x08, r25	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1fe:	e9 ef       	ldi	r30, 0xF9	; 249
 200:	f0 e0       	ldi	r31, 0x00	; 0
 202:	31 97       	sbiw	r30, 0x01	; 1
 204:	f1 f7       	brne	.-4      	; 0x202 <LCD_sendCommand+0x10>
 206:	00 c0       	rjmp	.+0      	; 0x208 <LCD_sendCommand+0x16>
 208:	00 00       	nop
	_delay_ms(1);
	SET_BIT(LCD_CTRL_PORT_OUT,E);
 20a:	98 b1       	in	r25, 0x08	; 8
 20c:	94 60       	ori	r25, 0x04	; 4
 20e:	98 b9       	out	0x08, r25	; 8
 210:	e9 ef       	ldi	r30, 0xF9	; 249
 212:	f0 e0       	ldi	r31, 0x00	; 0
 214:	31 97       	sbiw	r30, 0x01	; 1
 216:	f1 f7       	brne	.-4      	; 0x214 <LCD_sendCommand+0x22>
 218:	00 c0       	rjmp	.+0      	; 0x21a <LCD_sendCommand+0x28>
 21a:	00 00       	nop
	    LCD_DATA_PORT_OUT = (LCD_DATA_PORT_OUT & 0x0F) | ((command & 0x0F)<<4);
	  #else
	    LCD_DATA_PORT_OUT = (LCD_DATA_PORT_OUT & 0xF0) | (command & 0x0F);
	  #endif
    #elif (LCD_DATA_BITS_MODE == 8)
	  LCD_DATA_PORT_OUT = command;
 21c:	85 b9       	out	0x05, r24	; 5
 21e:	89 ef       	ldi	r24, 0xF9	; 249
 220:	90 e0       	ldi	r25, 0x00	; 0
 222:	01 97       	sbiw	r24, 0x01	; 1
 224:	f1 f7       	brne	.-4      	; 0x222 <LCD_sendCommand+0x30>
 226:	00 c0       	rjmp	.+0      	; 0x228 <LCD_sendCommand+0x36>
 228:	00 00       	nop
    #endif
	_delay_ms(1);
	CLEAR_BIT(LCD_CTRL_PORT_OUT,E);
 22a:	88 b1       	in	r24, 0x08	; 8
 22c:	8b 7f       	andi	r24, 0xFB	; 251
 22e:	88 b9       	out	0x08, r24	; 8
 230:	e9 ef       	ldi	r30, 0xF9	; 249
 232:	f0 e0       	ldi	r31, 0x00	; 0
 234:	31 97       	sbiw	r30, 0x01	; 1
 236:	f1 f7       	brne	.-4      	; 0x234 <LCD_sendCommand+0x42>
 238:	00 c0       	rjmp	.+0      	; 0x23a <LCD_sendCommand+0x48>
 23a:	00 00       	nop
 23c:	08 95       	ret

0000023e <LCD_init>:
#include "lcd.h"

void LCD_init()
{
	
	LCD_CTRL_PORT_DIR |= (1<<RS) | (1<<RW) | (1<<E);
 23e:	87 b1       	in	r24, 0x07	; 7
 240:	87 60       	ori	r24, 0x07	; 7
 242:	87 b9       	out	0x07, r24	; 7
	    LCD_DATA_PORT_DIR |= 0x0F;
      #endif
	  LCD_sendCommand(FOUR_BITS_DATA_MODE);
	  LCD_sendCommand(SET_LCD_TWO_LINE_FOUR_BIT_MODE);
	#elif (LCD_DATA_BITS_MODE == 8)
      LCD_DATA_PORT_DIR = 0xFF;
 244:	8f ef       	ldi	r24, 0xFF	; 255
 246:	84 b9       	out	0x04, r24	; 4
	  LCD_sendCommand(SET_LCD_TWO_LINE_EIGHT_BIT_MODE);
 248:	88 e3       	ldi	r24, 0x38	; 56
 24a:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <LCD_sendCommand>
    #endif
	
	LCD_sendCommand(DISPLAY_ON_CURSOR_BLINKING);
 24e:	8f e0       	ldi	r24, 0x0F	; 15
 250:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <LCD_sendCommand>
	LCD_sendCommand(CLEAR_DISPLAY);
 254:	81 e0       	ldi	r24, 0x01	; 1
 256:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <LCD_sendCommand>
 25a:	08 95       	ret

0000025c <LCD_displayCharacter>:
	_delay_ms(1);
}

void LCD_displayCharacter(uint8_t data)
{
	SET_BIT(LCD_CTRL_PORT_OUT,RS);
 25c:	98 b1       	in	r25, 0x08	; 8
 25e:	91 60       	ori	r25, 0x01	; 1
 260:	98 b9       	out	0x08, r25	; 8
	CLEAR_BIT(LCD_CTRL_PORT_OUT,RW);
 262:	98 b1       	in	r25, 0x08	; 8
 264:	9d 7f       	andi	r25, 0xFD	; 253
 266:	98 b9       	out	0x08, r25	; 8
 268:	e9 ef       	ldi	r30, 0xF9	; 249
 26a:	f0 e0       	ldi	r31, 0x00	; 0
 26c:	31 97       	sbiw	r30, 0x01	; 1
 26e:	f1 f7       	brne	.-4      	; 0x26c <LCD_displayCharacter+0x10>
 270:	00 c0       	rjmp	.+0      	; 0x272 <LCD_displayCharacter+0x16>
 272:	00 00       	nop
	_delay_ms(1);
	SET_BIT(LCD_CTRL_PORT_OUT,E);
 274:	98 b1       	in	r25, 0x08	; 8
 276:	94 60       	ori	r25, 0x04	; 4
 278:	98 b9       	out	0x08, r25	; 8
 27a:	e9 ef       	ldi	r30, 0xF9	; 249
 27c:	f0 e0       	ldi	r31, 0x00	; 0
 27e:	31 97       	sbiw	r30, 0x01	; 1
 280:	f1 f7       	brne	.-4      	; 0x27e <LCD_displayCharacter+0x22>
 282:	00 c0       	rjmp	.+0      	; 0x284 <LCD_displayCharacter+0x28>
 284:	00 00       	nop
	    LCD_DATA_PORT_OUT = (LCD_DATA_PORT_OUT & 0x0F) | ((data & 0x0F)<<4);
	  #else
	    LCD_DATA_PORT_OUT = (LCD_DATA_PORT_OUT & 0xF0) | (data & 0x0F);
	  #endif
	#elif (LCD_DATA_BITS_MODE == 8)
	  LCD_DATA_PORT_OUT = data;
 286:	85 b9       	out	0x05, r24	; 5
 288:	89 ef       	ldi	r24, 0xF9	; 249
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	01 97       	sbiw	r24, 0x01	; 1
 28e:	f1 f7       	brne	.-4      	; 0x28c <LCD_displayCharacter+0x30>
 290:	00 c0       	rjmp	.+0      	; 0x292 <LCD_displayCharacter+0x36>
 292:	00 00       	nop
	#endif
	_delay_ms(1);
	CLEAR_BIT(LCD_CTRL_PORT_OUT,E);
 294:	88 b1       	in	r24, 0x08	; 8
 296:	8b 7f       	andi	r24, 0xFB	; 251
 298:	88 b9       	out	0x08, r24	; 8
 29a:	e9 ef       	ldi	r30, 0xF9	; 249
 29c:	f0 e0       	ldi	r31, 0x00	; 0
 29e:	31 97       	sbiw	r30, 0x01	; 1
 2a0:	f1 f7       	brne	.-4      	; 0x29e <LCD_displayCharacter+0x42>
 2a2:	00 c0       	rjmp	.+0      	; 0x2a4 <LCD_displayCharacter+0x48>
 2a4:	00 00       	nop
 2a6:	08 95       	ret

000002a8 <LCD_displayString>:
	_delay_ms(1);
}

void LCD_displayString(const uint8_t *String)
{
 2a8:	cf 93       	push	r28
 2aa:	df 93       	push	r29
 2ac:	ec 01       	movw	r28, r24
	
	while((*String) != '\0')
 2ae:	03 c0       	rjmp	.+6      	; 0x2b6 <LCD_displayString+0xe>
	{
		LCD_displayCharacter(*String);
 2b0:	0e 94 2e 01 	call	0x25c	; 0x25c <LCD_displayCharacter>
		String++;
 2b4:	21 96       	adiw	r28, 0x01	; 1
}

void LCD_displayString(const uint8_t *String)
{
	
	while((*String) != '\0')
 2b6:	88 81       	ld	r24, Y
 2b8:	81 11       	cpse	r24, r1
 2ba:	fa cf       	rjmp	.-12     	; 0x2b0 <LCD_displayString+0x8>
		LCD_displayCharacter(*String);
		String++;
		
	}
	
}
 2bc:	df 91       	pop	r29
 2be:	cf 91       	pop	r28
 2c0:	08 95       	ret

000002c2 <LCD_goToRowColumn>:

void LCD_goToRowColumn(uint8_t row,uint8_t col)
{
	uint8_t Adrreses = 0x00;
	
	switch(row)
 2c2:	81 30       	cpi	r24, 0x01	; 1
 2c4:	39 f0       	breq	.+14     	; 0x2d4 <LCD_goToRowColumn+0x12>
 2c6:	58 f0       	brcs	.+22     	; 0x2de <LCD_goToRowColumn+0x1c>
 2c8:	82 30       	cpi	r24, 0x02	; 2
 2ca:	31 f0       	breq	.+12     	; 0x2d8 <LCD_goToRowColumn+0x16>
 2cc:	83 30       	cpi	r24, 0x03	; 3
 2ce:	31 f0       	breq	.+12     	; 0x2dc <LCD_goToRowColumn+0x1a>
	
}

void LCD_goToRowColumn(uint8_t row,uint8_t col)
{
	uint8_t Adrreses = 0x00;
 2d0:	60 e0       	ldi	r22, 0x00	; 0
 2d2:	05 c0       	rjmp	.+10     	; 0x2de <LCD_goToRowColumn+0x1c>
		case 0 :
		Adrreses = col;
		break;
		
		case 1:
		Adrreses = (0x40) + col;
 2d4:	60 5c       	subi	r22, 0xC0	; 192
		break;
 2d6:	03 c0       	rjmp	.+6      	; 0x2de <LCD_goToRowColumn+0x1c>
		
		case 2:
		Adrreses = (0x10) + col;
 2d8:	60 5f       	subi	r22, 0xF0	; 240
		break;
 2da:	01 c0       	rjmp	.+2      	; 0x2de <LCD_goToRowColumn+0x1c>
		
		case 3:
		Adrreses = (0x50) + col;
 2dc:	60 5b       	subi	r22, 0xB0	; 176
		break;
	}
	
	LCD_sendCommand(Adrreses | SET_CURSOR_POSITION);
 2de:	86 2f       	mov	r24, r22
 2e0:	80 68       	ori	r24, 0x80	; 128
 2e2:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <LCD_sendCommand>
 2e6:	08 95       	ret

000002e8 <LCD_displayStringRowColumn>:
	

}

void LCD_displayStringRowColumn(uint8_t row,uint8_t col,const uint8_t *String)
{
 2e8:	cf 93       	push	r28
 2ea:	df 93       	push	r29
 2ec:	ea 01       	movw	r28, r20
	LCD_goToRowColumn(row,col);
 2ee:	0e 94 61 01 	call	0x2c2	; 0x2c2 <LCD_goToRowColumn>
	LCD_displayString(String);
 2f2:	ce 01       	movw	r24, r28
 2f4:	0e 94 54 01 	call	0x2a8	; 0x2a8 <LCD_displayString>
}
 2f8:	df 91       	pop	r29
 2fa:	cf 91       	pop	r28
 2fc:	08 95       	ret

000002fe <main>:
#include <stdlib.h>
#include <math.h>

/*------------------------------- Functions ----------------------------------------*/
int main(void)
{
 2fe:	cf 93       	push	r28
 300:	df 93       	push	r29
 302:	00 d0       	rcall	.+0      	; 0x304 <main+0x6>
 304:	00 d0       	rcall	.+0      	; 0x306 <main+0x8>
 306:	00 d0       	rcall	.+0      	; 0x308 <main+0xa>
 308:	cd b7       	in	r28, 0x3d	; 61
 30a:	de b7       	in	r29, 0x3e	; 62
    /* Replace with your application code */
	
	LCD_init(); // Intiliaze LCD
 30c:	0e 94 1f 01 	call	0x23e	; 0x23e <LCD_init>
	
	LCD_sendCommand(DISPLAY_ON_CURSOR_OFF); // TurnOff LCD Cursor Blinking
 310:	8c e0       	ldi	r24, 0x0C	; 12
 312:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <LCD_sendCommand>
	
	ADC_ConfigType ADC_ConfigStruct = {F_CPU_8,AREF}; // Struct For ADC configurations
 316:	83 e0       	ldi	r24, 0x03	; 3
 318:	89 83       	std	Y+1, r24	; 0x01
 31a:	1a 82       	std	Y+2, r1	; 0x02
		
	ADC_init(&ADC_ConfigStruct); // Intiliaze ADC
 31c:	ce 01       	movw	r24, r28
 31e:	01 96       	adiw	r24, 0x01	; 1
 320:	0e 94 c8 00 	call	0x190	; 0x190 <ADC_init>

		
    while (1) 
    {
		
		voltage = Voltmeter_getVoltage(); // Reads value from ADC and convert it to voltage
 324:	0e 94 c1 01 	call	0x382	; 0x382 <Voltmeter_getVoltage>
 328:	6b 01       	movw	r12, r22
 32a:	7c 01       	movw	r14, r24
		
		dtostrf(voltage, 4, 1, array_of_voltage); // Convert Float to array of chars to Display on LCD
 32c:	8e 01       	movw	r16, r28
 32e:	0d 5f       	subi	r16, 0xFD	; 253
 330:	1f 4f       	sbci	r17, 0xFF	; 255
 332:	21 e0       	ldi	r18, 0x01	; 1
 334:	44 e0       	ldi	r20, 0x04	; 4
 336:	0e 94 6c 03 	call	0x6d8	; 0x6d8 <dtostrf>
		
		if (voltage == 0.0)
 33a:	20 e0       	ldi	r18, 0x00	; 0
 33c:	30 e0       	ldi	r19, 0x00	; 0
 33e:	a9 01       	movw	r20, r18
 340:	c7 01       	movw	r24, r14
 342:	b6 01       	movw	r22, r12
 344:	0e 94 d6 01 	call	0x3ac	; 0x3ac <__cmpsf2>
 348:	81 11       	cpse	r24, r1
 34a:	06 c0       	rjmp	.+12     	; 0x358 <main+0x5a>
		{
			LCD_displayStringRowColumn(0,2,"Disconnected");
 34c:	40 e0       	ldi	r20, 0x00	; 0
 34e:	51 e0       	ldi	r21, 0x01	; 1
 350:	62 e0       	ldi	r22, 0x02	; 2
 352:	0e 94 74 01 	call	0x2e8	; 0x2e8 <LCD_displayStringRowColumn>
 356:	e6 cf       	rjmp	.-52     	; 0x324 <main+0x26>
		}
		else
		{
			LCD_displayStringRowColumn(0,2,"Connected  "); // Clear Row 1
 358:	4d e0       	ldi	r20, 0x0D	; 13
 35a:	51 e0       	ldi	r21, 0x01	; 1
 35c:	62 e0       	ldi	r22, 0x02	; 2
 35e:	80 e0       	ldi	r24, 0x00	; 0
 360:	0e 94 74 01 	call	0x2e8	; 0x2e8 <LCD_displayStringRowColumn>
			LCD_displayStringRowColumn(1,0,"Voltage = ");
 364:	49 e1       	ldi	r20, 0x19	; 25
 366:	51 e0       	ldi	r21, 0x01	; 1
 368:	60 e0       	ldi	r22, 0x00	; 0
 36a:	81 e0       	ldi	r24, 0x01	; 1
 36c:	0e 94 74 01 	call	0x2e8	; 0x2e8 <LCD_displayStringRowColumn>
			LCD_displayString(array_of_voltage); // Show Voltemer Reading
 370:	ce 01       	movw	r24, r28
 372:	03 96       	adiw	r24, 0x03	; 3
 374:	0e 94 54 01 	call	0x2a8	; 0x2a8 <LCD_displayString>
			LCD_displayString("  "); // To clear display after Voltage Value
 378:	86 e1       	ldi	r24, 0x16	; 22
 37a:	91 e0       	ldi	r25, 0x01	; 1
 37c:	0e 94 54 01 	call	0x2a8	; 0x2a8 <LCD_displayString>
 380:	d1 cf       	rjmp	.-94     	; 0x324 <main+0x26>

00000382 <Voltmeter_getVoltage>:

#include "voltmeter.h"

float Voltmeter_getVoltage() {
	
	uint16_t adc_value = ADC_readChannel(SENSOR_CHANNEL_ID); // Reads Value of ADC
 382:	86 e0       	ldi	r24, 0x06	; 6
 384:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <ADC_readChannel>
	
	float voltage;
	
	voltage = (((float)adc_value*50.0)/(1023));
 388:	bc 01       	movw	r22, r24
 38a:	80 e0       	ldi	r24, 0x00	; 0
 38c:	90 e0       	ldi	r25, 0x00	; 0
 38e:	0e 94 4d 02 	call	0x49a	; 0x49a <__floatunsisf>
 392:	20 e0       	ldi	r18, 0x00	; 0
 394:	30 e0       	ldi	r19, 0x00	; 0
 396:	48 e4       	ldi	r20, 0x48	; 72
 398:	52 e4       	ldi	r21, 0x42	; 66
 39a:	0e 94 ff 02 	call	0x5fe	; 0x5fe <__mulsf3>
 39e:	20 e0       	ldi	r18, 0x00	; 0
 3a0:	30 ec       	ldi	r19, 0xC0	; 192
 3a2:	4f e7       	ldi	r20, 0x7F	; 127
 3a4:	54 e4       	ldi	r21, 0x44	; 68
 3a6:	0e 94 db 01 	call	0x3b6	; 0x3b6 <__divsf3>
	
	return voltage;
	
	
 3aa:	08 95       	ret

000003ac <__cmpsf2>:
 3ac:	0e 94 8a 02 	call	0x514	; 0x514 <__fp_cmp>
 3b0:	08 f4       	brcc	.+2      	; 0x3b4 <__cmpsf2+0x8>
 3b2:	81 e0       	ldi	r24, 0x01	; 1
 3b4:	08 95       	ret

000003b6 <__divsf3>:
 3b6:	0e 94 ef 01 	call	0x3de	; 0x3de <__divsf3x>
 3ba:	0c 94 c5 02 	jmp	0x58a	; 0x58a <__fp_round>
 3be:	0e 94 be 02 	call	0x57c	; 0x57c <__fp_pscB>
 3c2:	58 f0       	brcs	.+22     	; 0x3da <__divsf3+0x24>
 3c4:	0e 94 b7 02 	call	0x56e	; 0x56e <__fp_pscA>
 3c8:	40 f0       	brcs	.+16     	; 0x3da <__divsf3+0x24>
 3ca:	29 f4       	brne	.+10     	; 0x3d6 <__divsf3+0x20>
 3cc:	5f 3f       	cpi	r21, 0xFF	; 255
 3ce:	29 f0       	breq	.+10     	; 0x3da <__divsf3+0x24>
 3d0:	0c 94 ae 02 	jmp	0x55c	; 0x55c <__fp_inf>
 3d4:	51 11       	cpse	r21, r1
 3d6:	0c 94 f9 02 	jmp	0x5f2	; 0x5f2 <__fp_szero>
 3da:	0c 94 b4 02 	jmp	0x568	; 0x568 <__fp_nan>

000003de <__divsf3x>:
 3de:	0e 94 d6 02 	call	0x5ac	; 0x5ac <__fp_split3>
 3e2:	68 f3       	brcs	.-38     	; 0x3be <__divsf3+0x8>

000003e4 <__divsf3_pse>:
 3e4:	99 23       	and	r25, r25
 3e6:	b1 f3       	breq	.-20     	; 0x3d4 <__divsf3+0x1e>
 3e8:	55 23       	and	r21, r21
 3ea:	91 f3       	breq	.-28     	; 0x3d0 <__divsf3+0x1a>
 3ec:	95 1b       	sub	r25, r21
 3ee:	55 0b       	sbc	r21, r21
 3f0:	bb 27       	eor	r27, r27
 3f2:	aa 27       	eor	r26, r26
 3f4:	62 17       	cp	r22, r18
 3f6:	73 07       	cpc	r23, r19
 3f8:	84 07       	cpc	r24, r20
 3fa:	38 f0       	brcs	.+14     	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 3fc:	9f 5f       	subi	r25, 0xFF	; 255
 3fe:	5f 4f       	sbci	r21, 0xFF	; 255
 400:	22 0f       	add	r18, r18
 402:	33 1f       	adc	r19, r19
 404:	44 1f       	adc	r20, r20
 406:	aa 1f       	adc	r26, r26
 408:	a9 f3       	breq	.-22     	; 0x3f4 <__divsf3_pse+0x10>
 40a:	35 d0       	rcall	.+106    	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
 40c:	0e 2e       	mov	r0, r30
 40e:	3a f0       	brmi	.+14     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 410:	e0 e8       	ldi	r30, 0x80	; 128
 412:	32 d0       	rcall	.+100    	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
 414:	91 50       	subi	r25, 0x01	; 1
 416:	50 40       	sbci	r21, 0x00	; 0
 418:	e6 95       	lsr	r30
 41a:	00 1c       	adc	r0, r0
 41c:	ca f7       	brpl	.-14     	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 41e:	2b d0       	rcall	.+86     	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
 420:	fe 2f       	mov	r31, r30
 422:	29 d0       	rcall	.+82     	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
 424:	66 0f       	add	r22, r22
 426:	77 1f       	adc	r23, r23
 428:	88 1f       	adc	r24, r24
 42a:	bb 1f       	adc	r27, r27
 42c:	26 17       	cp	r18, r22
 42e:	37 07       	cpc	r19, r23
 430:	48 07       	cpc	r20, r24
 432:	ab 07       	cpc	r26, r27
 434:	b0 e8       	ldi	r27, 0x80	; 128
 436:	09 f0       	breq	.+2      	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
 438:	bb 0b       	sbc	r27, r27
 43a:	80 2d       	mov	r24, r0
 43c:	bf 01       	movw	r22, r30
 43e:	ff 27       	eor	r31, r31
 440:	93 58       	subi	r25, 0x83	; 131
 442:	5f 4f       	sbci	r21, 0xFF	; 255
 444:	3a f0       	brmi	.+14     	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
 446:	9e 3f       	cpi	r25, 0xFE	; 254
 448:	51 05       	cpc	r21, r1
 44a:	78 f0       	brcs	.+30     	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
 44c:	0c 94 ae 02 	jmp	0x55c	; 0x55c <__fp_inf>
 450:	0c 94 f9 02 	jmp	0x5f2	; 0x5f2 <__fp_szero>
 454:	5f 3f       	cpi	r21, 0xFF	; 255
 456:	e4 f3       	brlt	.-8      	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
 458:	98 3e       	cpi	r25, 0xE8	; 232
 45a:	d4 f3       	brlt	.-12     	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
 45c:	86 95       	lsr	r24
 45e:	77 95       	ror	r23
 460:	67 95       	ror	r22
 462:	b7 95       	ror	r27
 464:	f7 95       	ror	r31
 466:	9f 5f       	subi	r25, 0xFF	; 255
 468:	c9 f7       	brne	.-14     	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
 46a:	88 0f       	add	r24, r24
 46c:	91 1d       	adc	r25, r1
 46e:	96 95       	lsr	r25
 470:	87 95       	ror	r24
 472:	97 f9       	bld	r25, 7
 474:	08 95       	ret
 476:	e1 e0       	ldi	r30, 0x01	; 1
 478:	66 0f       	add	r22, r22
 47a:	77 1f       	adc	r23, r23
 47c:	88 1f       	adc	r24, r24
 47e:	bb 1f       	adc	r27, r27
 480:	62 17       	cp	r22, r18
 482:	73 07       	cpc	r23, r19
 484:	84 07       	cpc	r24, r20
 486:	ba 07       	cpc	r27, r26
 488:	20 f0       	brcs	.+8      	; 0x492 <__EEPROM_REGION_LENGTH__+0x92>
 48a:	62 1b       	sub	r22, r18
 48c:	73 0b       	sbc	r23, r19
 48e:	84 0b       	sbc	r24, r20
 490:	ba 0b       	sbc	r27, r26
 492:	ee 1f       	adc	r30, r30
 494:	88 f7       	brcc	.-30     	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
 496:	e0 95       	com	r30
 498:	08 95       	ret

0000049a <__floatunsisf>:
 49a:	e8 94       	clt
 49c:	09 c0       	rjmp	.+18     	; 0x4b0 <__floatsisf+0x12>

0000049e <__floatsisf>:
 49e:	97 fb       	bst	r25, 7
 4a0:	3e f4       	brtc	.+14     	; 0x4b0 <__floatsisf+0x12>
 4a2:	90 95       	com	r25
 4a4:	80 95       	com	r24
 4a6:	70 95       	com	r23
 4a8:	61 95       	neg	r22
 4aa:	7f 4f       	sbci	r23, 0xFF	; 255
 4ac:	8f 4f       	sbci	r24, 0xFF	; 255
 4ae:	9f 4f       	sbci	r25, 0xFF	; 255
 4b0:	99 23       	and	r25, r25
 4b2:	a9 f0       	breq	.+42     	; 0x4de <__floatsisf+0x40>
 4b4:	f9 2f       	mov	r31, r25
 4b6:	96 e9       	ldi	r25, 0x96	; 150
 4b8:	bb 27       	eor	r27, r27
 4ba:	93 95       	inc	r25
 4bc:	f6 95       	lsr	r31
 4be:	87 95       	ror	r24
 4c0:	77 95       	ror	r23
 4c2:	67 95       	ror	r22
 4c4:	b7 95       	ror	r27
 4c6:	f1 11       	cpse	r31, r1
 4c8:	f8 cf       	rjmp	.-16     	; 0x4ba <__floatsisf+0x1c>
 4ca:	fa f4       	brpl	.+62     	; 0x50a <__floatsisf+0x6c>
 4cc:	bb 0f       	add	r27, r27
 4ce:	11 f4       	brne	.+4      	; 0x4d4 <__floatsisf+0x36>
 4d0:	60 ff       	sbrs	r22, 0
 4d2:	1b c0       	rjmp	.+54     	; 0x50a <__floatsisf+0x6c>
 4d4:	6f 5f       	subi	r22, 0xFF	; 255
 4d6:	7f 4f       	sbci	r23, 0xFF	; 255
 4d8:	8f 4f       	sbci	r24, 0xFF	; 255
 4da:	9f 4f       	sbci	r25, 0xFF	; 255
 4dc:	16 c0       	rjmp	.+44     	; 0x50a <__floatsisf+0x6c>
 4de:	88 23       	and	r24, r24
 4e0:	11 f0       	breq	.+4      	; 0x4e6 <__floatsisf+0x48>
 4e2:	96 e9       	ldi	r25, 0x96	; 150
 4e4:	11 c0       	rjmp	.+34     	; 0x508 <__floatsisf+0x6a>
 4e6:	77 23       	and	r23, r23
 4e8:	21 f0       	breq	.+8      	; 0x4f2 <__floatsisf+0x54>
 4ea:	9e e8       	ldi	r25, 0x8E	; 142
 4ec:	87 2f       	mov	r24, r23
 4ee:	76 2f       	mov	r23, r22
 4f0:	05 c0       	rjmp	.+10     	; 0x4fc <__floatsisf+0x5e>
 4f2:	66 23       	and	r22, r22
 4f4:	71 f0       	breq	.+28     	; 0x512 <__floatsisf+0x74>
 4f6:	96 e8       	ldi	r25, 0x86	; 134
 4f8:	86 2f       	mov	r24, r22
 4fa:	70 e0       	ldi	r23, 0x00	; 0
 4fc:	60 e0       	ldi	r22, 0x00	; 0
 4fe:	2a f0       	brmi	.+10     	; 0x50a <__floatsisf+0x6c>
 500:	9a 95       	dec	r25
 502:	66 0f       	add	r22, r22
 504:	77 1f       	adc	r23, r23
 506:	88 1f       	adc	r24, r24
 508:	da f7       	brpl	.-10     	; 0x500 <__floatsisf+0x62>
 50a:	88 0f       	add	r24, r24
 50c:	96 95       	lsr	r25
 50e:	87 95       	ror	r24
 510:	97 f9       	bld	r25, 7
 512:	08 95       	ret

00000514 <__fp_cmp>:
 514:	99 0f       	add	r25, r25
 516:	00 08       	sbc	r0, r0
 518:	55 0f       	add	r21, r21
 51a:	aa 0b       	sbc	r26, r26
 51c:	e0 e8       	ldi	r30, 0x80	; 128
 51e:	fe ef       	ldi	r31, 0xFE	; 254
 520:	16 16       	cp	r1, r22
 522:	17 06       	cpc	r1, r23
 524:	e8 07       	cpc	r30, r24
 526:	f9 07       	cpc	r31, r25
 528:	c0 f0       	brcs	.+48     	; 0x55a <__fp_cmp+0x46>
 52a:	12 16       	cp	r1, r18
 52c:	13 06       	cpc	r1, r19
 52e:	e4 07       	cpc	r30, r20
 530:	f5 07       	cpc	r31, r21
 532:	98 f0       	brcs	.+38     	; 0x55a <__fp_cmp+0x46>
 534:	62 1b       	sub	r22, r18
 536:	73 0b       	sbc	r23, r19
 538:	84 0b       	sbc	r24, r20
 53a:	95 0b       	sbc	r25, r21
 53c:	39 f4       	brne	.+14     	; 0x54c <__fp_cmp+0x38>
 53e:	0a 26       	eor	r0, r26
 540:	61 f0       	breq	.+24     	; 0x55a <__fp_cmp+0x46>
 542:	23 2b       	or	r18, r19
 544:	24 2b       	or	r18, r20
 546:	25 2b       	or	r18, r21
 548:	21 f4       	brne	.+8      	; 0x552 <__fp_cmp+0x3e>
 54a:	08 95       	ret
 54c:	0a 26       	eor	r0, r26
 54e:	09 f4       	brne	.+2      	; 0x552 <__fp_cmp+0x3e>
 550:	a1 40       	sbci	r26, 0x01	; 1
 552:	a6 95       	lsr	r26
 554:	8f ef       	ldi	r24, 0xFF	; 255
 556:	81 1d       	adc	r24, r1
 558:	81 1d       	adc	r24, r1
 55a:	08 95       	ret

0000055c <__fp_inf>:
 55c:	97 f9       	bld	r25, 7
 55e:	9f 67       	ori	r25, 0x7F	; 127
 560:	80 e8       	ldi	r24, 0x80	; 128
 562:	70 e0       	ldi	r23, 0x00	; 0
 564:	60 e0       	ldi	r22, 0x00	; 0
 566:	08 95       	ret

00000568 <__fp_nan>:
 568:	9f ef       	ldi	r25, 0xFF	; 255
 56a:	80 ec       	ldi	r24, 0xC0	; 192
 56c:	08 95       	ret

0000056e <__fp_pscA>:
 56e:	00 24       	eor	r0, r0
 570:	0a 94       	dec	r0
 572:	16 16       	cp	r1, r22
 574:	17 06       	cpc	r1, r23
 576:	18 06       	cpc	r1, r24
 578:	09 06       	cpc	r0, r25
 57a:	08 95       	ret

0000057c <__fp_pscB>:
 57c:	00 24       	eor	r0, r0
 57e:	0a 94       	dec	r0
 580:	12 16       	cp	r1, r18
 582:	13 06       	cpc	r1, r19
 584:	14 06       	cpc	r1, r20
 586:	05 06       	cpc	r0, r21
 588:	08 95       	ret

0000058a <__fp_round>:
 58a:	09 2e       	mov	r0, r25
 58c:	03 94       	inc	r0
 58e:	00 0c       	add	r0, r0
 590:	11 f4       	brne	.+4      	; 0x596 <__fp_round+0xc>
 592:	88 23       	and	r24, r24
 594:	52 f0       	brmi	.+20     	; 0x5aa <__fp_round+0x20>
 596:	bb 0f       	add	r27, r27
 598:	40 f4       	brcc	.+16     	; 0x5aa <__fp_round+0x20>
 59a:	bf 2b       	or	r27, r31
 59c:	11 f4       	brne	.+4      	; 0x5a2 <__fp_round+0x18>
 59e:	60 ff       	sbrs	r22, 0
 5a0:	04 c0       	rjmp	.+8      	; 0x5aa <__fp_round+0x20>
 5a2:	6f 5f       	subi	r22, 0xFF	; 255
 5a4:	7f 4f       	sbci	r23, 0xFF	; 255
 5a6:	8f 4f       	sbci	r24, 0xFF	; 255
 5a8:	9f 4f       	sbci	r25, 0xFF	; 255
 5aa:	08 95       	ret

000005ac <__fp_split3>:
 5ac:	57 fd       	sbrc	r21, 7
 5ae:	90 58       	subi	r25, 0x80	; 128
 5b0:	44 0f       	add	r20, r20
 5b2:	55 1f       	adc	r21, r21
 5b4:	59 f0       	breq	.+22     	; 0x5cc <__fp_splitA+0x10>
 5b6:	5f 3f       	cpi	r21, 0xFF	; 255
 5b8:	71 f0       	breq	.+28     	; 0x5d6 <__fp_splitA+0x1a>
 5ba:	47 95       	ror	r20

000005bc <__fp_splitA>:
 5bc:	88 0f       	add	r24, r24
 5be:	97 fb       	bst	r25, 7
 5c0:	99 1f       	adc	r25, r25
 5c2:	61 f0       	breq	.+24     	; 0x5dc <__fp_splitA+0x20>
 5c4:	9f 3f       	cpi	r25, 0xFF	; 255
 5c6:	79 f0       	breq	.+30     	; 0x5e6 <__fp_splitA+0x2a>
 5c8:	87 95       	ror	r24
 5ca:	08 95       	ret
 5cc:	12 16       	cp	r1, r18
 5ce:	13 06       	cpc	r1, r19
 5d0:	14 06       	cpc	r1, r20
 5d2:	55 1f       	adc	r21, r21
 5d4:	f2 cf       	rjmp	.-28     	; 0x5ba <__fp_split3+0xe>
 5d6:	46 95       	lsr	r20
 5d8:	f1 df       	rcall	.-30     	; 0x5bc <__fp_splitA>
 5da:	08 c0       	rjmp	.+16     	; 0x5ec <__fp_splitA+0x30>
 5dc:	16 16       	cp	r1, r22
 5de:	17 06       	cpc	r1, r23
 5e0:	18 06       	cpc	r1, r24
 5e2:	99 1f       	adc	r25, r25
 5e4:	f1 cf       	rjmp	.-30     	; 0x5c8 <__fp_splitA+0xc>
 5e6:	86 95       	lsr	r24
 5e8:	71 05       	cpc	r23, r1
 5ea:	61 05       	cpc	r22, r1
 5ec:	08 94       	sec
 5ee:	08 95       	ret

000005f0 <__fp_zero>:
 5f0:	e8 94       	clt

000005f2 <__fp_szero>:
 5f2:	bb 27       	eor	r27, r27
 5f4:	66 27       	eor	r22, r22
 5f6:	77 27       	eor	r23, r23
 5f8:	cb 01       	movw	r24, r22
 5fa:	97 f9       	bld	r25, 7
 5fc:	08 95       	ret

000005fe <__mulsf3>:
 5fe:	0e 94 12 03 	call	0x624	; 0x624 <__mulsf3x>
 602:	0c 94 c5 02 	jmp	0x58a	; 0x58a <__fp_round>
 606:	0e 94 b7 02 	call	0x56e	; 0x56e <__fp_pscA>
 60a:	38 f0       	brcs	.+14     	; 0x61a <__mulsf3+0x1c>
 60c:	0e 94 be 02 	call	0x57c	; 0x57c <__fp_pscB>
 610:	20 f0       	brcs	.+8      	; 0x61a <__mulsf3+0x1c>
 612:	95 23       	and	r25, r21
 614:	11 f0       	breq	.+4      	; 0x61a <__mulsf3+0x1c>
 616:	0c 94 ae 02 	jmp	0x55c	; 0x55c <__fp_inf>
 61a:	0c 94 b4 02 	jmp	0x568	; 0x568 <__fp_nan>
 61e:	11 24       	eor	r1, r1
 620:	0c 94 f9 02 	jmp	0x5f2	; 0x5f2 <__fp_szero>

00000624 <__mulsf3x>:
 624:	0e 94 d6 02 	call	0x5ac	; 0x5ac <__fp_split3>
 628:	70 f3       	brcs	.-36     	; 0x606 <__mulsf3+0x8>

0000062a <__mulsf3_pse>:
 62a:	95 9f       	mul	r25, r21
 62c:	c1 f3       	breq	.-16     	; 0x61e <__mulsf3+0x20>
 62e:	95 0f       	add	r25, r21
 630:	50 e0       	ldi	r21, 0x00	; 0
 632:	55 1f       	adc	r21, r21
 634:	62 9f       	mul	r22, r18
 636:	f0 01       	movw	r30, r0
 638:	72 9f       	mul	r23, r18
 63a:	bb 27       	eor	r27, r27
 63c:	f0 0d       	add	r31, r0
 63e:	b1 1d       	adc	r27, r1
 640:	63 9f       	mul	r22, r19
 642:	aa 27       	eor	r26, r26
 644:	f0 0d       	add	r31, r0
 646:	b1 1d       	adc	r27, r1
 648:	aa 1f       	adc	r26, r26
 64a:	64 9f       	mul	r22, r20
 64c:	66 27       	eor	r22, r22
 64e:	b0 0d       	add	r27, r0
 650:	a1 1d       	adc	r26, r1
 652:	66 1f       	adc	r22, r22
 654:	82 9f       	mul	r24, r18
 656:	22 27       	eor	r18, r18
 658:	b0 0d       	add	r27, r0
 65a:	a1 1d       	adc	r26, r1
 65c:	62 1f       	adc	r22, r18
 65e:	73 9f       	mul	r23, r19
 660:	b0 0d       	add	r27, r0
 662:	a1 1d       	adc	r26, r1
 664:	62 1f       	adc	r22, r18
 666:	83 9f       	mul	r24, r19
 668:	a0 0d       	add	r26, r0
 66a:	61 1d       	adc	r22, r1
 66c:	22 1f       	adc	r18, r18
 66e:	74 9f       	mul	r23, r20
 670:	33 27       	eor	r19, r19
 672:	a0 0d       	add	r26, r0
 674:	61 1d       	adc	r22, r1
 676:	23 1f       	adc	r18, r19
 678:	84 9f       	mul	r24, r20
 67a:	60 0d       	add	r22, r0
 67c:	21 1d       	adc	r18, r1
 67e:	82 2f       	mov	r24, r18
 680:	76 2f       	mov	r23, r22
 682:	6a 2f       	mov	r22, r26
 684:	11 24       	eor	r1, r1
 686:	9f 57       	subi	r25, 0x7F	; 127
 688:	50 40       	sbci	r21, 0x00	; 0
 68a:	9a f0       	brmi	.+38     	; 0x6b2 <__mulsf3_pse+0x88>
 68c:	f1 f0       	breq	.+60     	; 0x6ca <__mulsf3_pse+0xa0>
 68e:	88 23       	and	r24, r24
 690:	4a f0       	brmi	.+18     	; 0x6a4 <__mulsf3_pse+0x7a>
 692:	ee 0f       	add	r30, r30
 694:	ff 1f       	adc	r31, r31
 696:	bb 1f       	adc	r27, r27
 698:	66 1f       	adc	r22, r22
 69a:	77 1f       	adc	r23, r23
 69c:	88 1f       	adc	r24, r24
 69e:	91 50       	subi	r25, 0x01	; 1
 6a0:	50 40       	sbci	r21, 0x00	; 0
 6a2:	a9 f7       	brne	.-22     	; 0x68e <__mulsf3_pse+0x64>
 6a4:	9e 3f       	cpi	r25, 0xFE	; 254
 6a6:	51 05       	cpc	r21, r1
 6a8:	80 f0       	brcs	.+32     	; 0x6ca <__mulsf3_pse+0xa0>
 6aa:	0c 94 ae 02 	jmp	0x55c	; 0x55c <__fp_inf>
 6ae:	0c 94 f9 02 	jmp	0x5f2	; 0x5f2 <__fp_szero>
 6b2:	5f 3f       	cpi	r21, 0xFF	; 255
 6b4:	e4 f3       	brlt	.-8      	; 0x6ae <__mulsf3_pse+0x84>
 6b6:	98 3e       	cpi	r25, 0xE8	; 232
 6b8:	d4 f3       	brlt	.-12     	; 0x6ae <__mulsf3_pse+0x84>
 6ba:	86 95       	lsr	r24
 6bc:	77 95       	ror	r23
 6be:	67 95       	ror	r22
 6c0:	b7 95       	ror	r27
 6c2:	f7 95       	ror	r31
 6c4:	e7 95       	ror	r30
 6c6:	9f 5f       	subi	r25, 0xFF	; 255
 6c8:	c1 f7       	brne	.-16     	; 0x6ba <__mulsf3_pse+0x90>
 6ca:	fe 2b       	or	r31, r30
 6cc:	88 0f       	add	r24, r24
 6ce:	91 1d       	adc	r25, r1
 6d0:	96 95       	lsr	r25
 6d2:	87 95       	ror	r24
 6d4:	97 f9       	bld	r25, 7
 6d6:	08 95       	ret

000006d8 <dtostrf>:
 6d8:	ef 92       	push	r14
 6da:	0f 93       	push	r16
 6dc:	1f 93       	push	r17
 6de:	cf 93       	push	r28
 6e0:	df 93       	push	r29
 6e2:	e8 01       	movw	r28, r16
 6e4:	47 fd       	sbrc	r20, 7
 6e6:	02 c0       	rjmp	.+4      	; 0x6ec <dtostrf+0x14>
 6e8:	34 e0       	ldi	r19, 0x04	; 4
 6ea:	01 c0       	rjmp	.+2      	; 0x6ee <dtostrf+0x16>
 6ec:	34 e1       	ldi	r19, 0x14	; 20
 6ee:	04 2e       	mov	r0, r20
 6f0:	00 0c       	add	r0, r0
 6f2:	55 0b       	sbc	r21, r21
 6f4:	57 ff       	sbrs	r21, 7
 6f6:	03 c0       	rjmp	.+6      	; 0x6fe <dtostrf+0x26>
 6f8:	51 95       	neg	r21
 6fa:	41 95       	neg	r20
 6fc:	51 09       	sbc	r21, r1
 6fe:	e3 2e       	mov	r14, r19
 700:	02 2f       	mov	r16, r18
 702:	24 2f       	mov	r18, r20
 704:	ae 01       	movw	r20, r28
 706:	0e 94 8c 03 	call	0x718	; 0x718 <dtoa_prf>
 70a:	ce 01       	movw	r24, r28
 70c:	df 91       	pop	r29
 70e:	cf 91       	pop	r28
 710:	1f 91       	pop	r17
 712:	0f 91       	pop	r16
 714:	ef 90       	pop	r14
 716:	08 95       	ret

00000718 <dtoa_prf>:
 718:	a9 e0       	ldi	r26, 0x09	; 9
 71a:	b0 e0       	ldi	r27, 0x00	; 0
 71c:	e2 e9       	ldi	r30, 0x92	; 146
 71e:	f3 e0       	ldi	r31, 0x03	; 3
 720:	0c 94 c4 05 	jmp	0xb88	; 0xb88 <__prologue_saves__+0xc>
 724:	6a 01       	movw	r12, r20
 726:	12 2f       	mov	r17, r18
 728:	b0 2e       	mov	r11, r16
 72a:	2b e3       	ldi	r18, 0x3B	; 59
 72c:	20 17       	cp	r18, r16
 72e:	20 f0       	brcs	.+8      	; 0x738 <dtoa_prf+0x20>
 730:	ff 24       	eor	r15, r15
 732:	f3 94       	inc	r15
 734:	f0 0e       	add	r15, r16
 736:	02 c0       	rjmp	.+4      	; 0x73c <dtoa_prf+0x24>
 738:	2c e3       	ldi	r18, 0x3C	; 60
 73a:	f2 2e       	mov	r15, r18
 73c:	0f 2d       	mov	r16, r15
 73e:	27 e0       	ldi	r18, 0x07	; 7
 740:	ae 01       	movw	r20, r28
 742:	4f 5f       	subi	r20, 0xFF	; 255
 744:	5f 4f       	sbci	r21, 0xFF	; 255
 746:	0e 94 e6 04 	call	0x9cc	; 0x9cc <__ftoa_engine>
 74a:	bc 01       	movw	r22, r24
 74c:	49 81       	ldd	r20, Y+1	; 0x01
 74e:	84 2f       	mov	r24, r20
 750:	89 70       	andi	r24, 0x09	; 9
 752:	81 30       	cpi	r24, 0x01	; 1
 754:	31 f0       	breq	.+12     	; 0x762 <dtoa_prf+0x4a>
 756:	e1 fc       	sbrc	r14, 1
 758:	06 c0       	rjmp	.+12     	; 0x766 <dtoa_prf+0x4e>
 75a:	e0 fe       	sbrs	r14, 0
 75c:	06 c0       	rjmp	.+12     	; 0x76a <dtoa_prf+0x52>
 75e:	90 e2       	ldi	r25, 0x20	; 32
 760:	05 c0       	rjmp	.+10     	; 0x76c <dtoa_prf+0x54>
 762:	9d e2       	ldi	r25, 0x2D	; 45
 764:	03 c0       	rjmp	.+6      	; 0x76c <dtoa_prf+0x54>
 766:	9b e2       	ldi	r25, 0x2B	; 43
 768:	01 c0       	rjmp	.+2      	; 0x76c <dtoa_prf+0x54>
 76a:	90 e0       	ldi	r25, 0x00	; 0
 76c:	5e 2d       	mov	r21, r14
 76e:	50 71       	andi	r21, 0x10	; 16
 770:	43 ff       	sbrs	r20, 3
 772:	3c c0       	rjmp	.+120    	; 0x7ec <dtoa_prf+0xd4>
 774:	91 11       	cpse	r25, r1
 776:	02 c0       	rjmp	.+4      	; 0x77c <dtoa_prf+0x64>
 778:	83 e0       	ldi	r24, 0x03	; 3
 77a:	01 c0       	rjmp	.+2      	; 0x77e <dtoa_prf+0x66>
 77c:	84 e0       	ldi	r24, 0x04	; 4
 77e:	81 17       	cp	r24, r17
 780:	18 f4       	brcc	.+6      	; 0x788 <dtoa_prf+0x70>
 782:	21 2f       	mov	r18, r17
 784:	28 1b       	sub	r18, r24
 786:	01 c0       	rjmp	.+2      	; 0x78a <dtoa_prf+0x72>
 788:	20 e0       	ldi	r18, 0x00	; 0
 78a:	51 11       	cpse	r21, r1
 78c:	0b c0       	rjmp	.+22     	; 0x7a4 <dtoa_prf+0x8c>
 78e:	f6 01       	movw	r30, r12
 790:	82 2f       	mov	r24, r18
 792:	30 e2       	ldi	r19, 0x20	; 32
 794:	88 23       	and	r24, r24
 796:	19 f0       	breq	.+6      	; 0x79e <dtoa_prf+0x86>
 798:	31 93       	st	Z+, r19
 79a:	81 50       	subi	r24, 0x01	; 1
 79c:	fb cf       	rjmp	.-10     	; 0x794 <dtoa_prf+0x7c>
 79e:	c2 0e       	add	r12, r18
 7a0:	d1 1c       	adc	r13, r1
 7a2:	20 e0       	ldi	r18, 0x00	; 0
 7a4:	99 23       	and	r25, r25
 7a6:	29 f0       	breq	.+10     	; 0x7b2 <dtoa_prf+0x9a>
 7a8:	d6 01       	movw	r26, r12
 7aa:	9c 93       	st	X, r25
 7ac:	f6 01       	movw	r30, r12
 7ae:	31 96       	adiw	r30, 0x01	; 1
 7b0:	6f 01       	movw	r12, r30
 7b2:	c6 01       	movw	r24, r12
 7b4:	03 96       	adiw	r24, 0x03	; 3
 7b6:	e2 fe       	sbrs	r14, 2
 7b8:	0a c0       	rjmp	.+20     	; 0x7ce <dtoa_prf+0xb6>
 7ba:	3e e4       	ldi	r19, 0x4E	; 78
 7bc:	d6 01       	movw	r26, r12
 7be:	3c 93       	st	X, r19
 7c0:	41 e4       	ldi	r20, 0x41	; 65
 7c2:	11 96       	adiw	r26, 0x01	; 1
 7c4:	4c 93       	st	X, r20
 7c6:	11 97       	sbiw	r26, 0x01	; 1
 7c8:	12 96       	adiw	r26, 0x02	; 2
 7ca:	3c 93       	st	X, r19
 7cc:	06 c0       	rjmp	.+12     	; 0x7da <dtoa_prf+0xc2>
 7ce:	3e e6       	ldi	r19, 0x6E	; 110
 7d0:	f6 01       	movw	r30, r12
 7d2:	30 83       	st	Z, r19
 7d4:	41 e6       	ldi	r20, 0x61	; 97
 7d6:	41 83       	std	Z+1, r20	; 0x01
 7d8:	32 83       	std	Z+2, r19	; 0x02
 7da:	fc 01       	movw	r30, r24
 7dc:	32 2f       	mov	r19, r18
 7de:	40 e2       	ldi	r20, 0x20	; 32
 7e0:	33 23       	and	r19, r19
 7e2:	09 f4       	brne	.+2      	; 0x7e6 <dtoa_prf+0xce>
 7e4:	42 c0       	rjmp	.+132    	; 0x86a <__DATA_REGION_LENGTH__+0x6a>
 7e6:	41 93       	st	Z+, r20
 7e8:	31 50       	subi	r19, 0x01	; 1
 7ea:	fa cf       	rjmp	.-12     	; 0x7e0 <dtoa_prf+0xc8>
 7ec:	42 ff       	sbrs	r20, 2
 7ee:	44 c0       	rjmp	.+136    	; 0x878 <__DATA_REGION_LENGTH__+0x78>
 7f0:	91 11       	cpse	r25, r1
 7f2:	02 c0       	rjmp	.+4      	; 0x7f8 <dtoa_prf+0xe0>
 7f4:	83 e0       	ldi	r24, 0x03	; 3
 7f6:	01 c0       	rjmp	.+2      	; 0x7fa <dtoa_prf+0xe2>
 7f8:	84 e0       	ldi	r24, 0x04	; 4
 7fa:	81 17       	cp	r24, r17
 7fc:	18 f4       	brcc	.+6      	; 0x804 <__DATA_REGION_LENGTH__+0x4>
 7fe:	21 2f       	mov	r18, r17
 800:	28 1b       	sub	r18, r24
 802:	01 c0       	rjmp	.+2      	; 0x806 <__DATA_REGION_LENGTH__+0x6>
 804:	20 e0       	ldi	r18, 0x00	; 0
 806:	51 11       	cpse	r21, r1
 808:	0b c0       	rjmp	.+22     	; 0x820 <__DATA_REGION_LENGTH__+0x20>
 80a:	f6 01       	movw	r30, r12
 80c:	82 2f       	mov	r24, r18
 80e:	30 e2       	ldi	r19, 0x20	; 32
 810:	88 23       	and	r24, r24
 812:	19 f0       	breq	.+6      	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
 814:	31 93       	st	Z+, r19
 816:	81 50       	subi	r24, 0x01	; 1
 818:	fb cf       	rjmp	.-10     	; 0x810 <__DATA_REGION_LENGTH__+0x10>
 81a:	c2 0e       	add	r12, r18
 81c:	d1 1c       	adc	r13, r1
 81e:	20 e0       	ldi	r18, 0x00	; 0
 820:	99 23       	and	r25, r25
 822:	29 f0       	breq	.+10     	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
 824:	d6 01       	movw	r26, r12
 826:	9c 93       	st	X, r25
 828:	f6 01       	movw	r30, r12
 82a:	31 96       	adiw	r30, 0x01	; 1
 82c:	6f 01       	movw	r12, r30
 82e:	c6 01       	movw	r24, r12
 830:	03 96       	adiw	r24, 0x03	; 3
 832:	e2 fe       	sbrs	r14, 2
 834:	0b c0       	rjmp	.+22     	; 0x84c <__DATA_REGION_LENGTH__+0x4c>
 836:	39 e4       	ldi	r19, 0x49	; 73
 838:	d6 01       	movw	r26, r12
 83a:	3c 93       	st	X, r19
 83c:	3e e4       	ldi	r19, 0x4E	; 78
 83e:	11 96       	adiw	r26, 0x01	; 1
 840:	3c 93       	st	X, r19
 842:	11 97       	sbiw	r26, 0x01	; 1
 844:	36 e4       	ldi	r19, 0x46	; 70
 846:	12 96       	adiw	r26, 0x02	; 2
 848:	3c 93       	st	X, r19
 84a:	07 c0       	rjmp	.+14     	; 0x85a <__DATA_REGION_LENGTH__+0x5a>
 84c:	39 e6       	ldi	r19, 0x69	; 105
 84e:	f6 01       	movw	r30, r12
 850:	30 83       	st	Z, r19
 852:	3e e6       	ldi	r19, 0x6E	; 110
 854:	31 83       	std	Z+1, r19	; 0x01
 856:	36 e6       	ldi	r19, 0x66	; 102
 858:	32 83       	std	Z+2, r19	; 0x02
 85a:	fc 01       	movw	r30, r24
 85c:	32 2f       	mov	r19, r18
 85e:	40 e2       	ldi	r20, 0x20	; 32
 860:	33 23       	and	r19, r19
 862:	19 f0       	breq	.+6      	; 0x86a <__DATA_REGION_LENGTH__+0x6a>
 864:	41 93       	st	Z+, r20
 866:	31 50       	subi	r19, 0x01	; 1
 868:	fb cf       	rjmp	.-10     	; 0x860 <__DATA_REGION_LENGTH__+0x60>
 86a:	fc 01       	movw	r30, r24
 86c:	e2 0f       	add	r30, r18
 86e:	f1 1d       	adc	r31, r1
 870:	10 82       	st	Z, r1
 872:	8e ef       	ldi	r24, 0xFE	; 254
 874:	9f ef       	ldi	r25, 0xFF	; 255
 876:	a6 c0       	rjmp	.+332    	; 0x9c4 <__stack+0xc5>
 878:	21 e0       	ldi	r18, 0x01	; 1
 87a:	30 e0       	ldi	r19, 0x00	; 0
 87c:	91 11       	cpse	r25, r1
 87e:	02 c0       	rjmp	.+4      	; 0x884 <__DATA_REGION_LENGTH__+0x84>
 880:	20 e0       	ldi	r18, 0x00	; 0
 882:	30 e0       	ldi	r19, 0x00	; 0
 884:	16 16       	cp	r1, r22
 886:	17 06       	cpc	r1, r23
 888:	1c f4       	brge	.+6      	; 0x890 <__DATA_REGION_LENGTH__+0x90>
 88a:	fb 01       	movw	r30, r22
 88c:	31 96       	adiw	r30, 0x01	; 1
 88e:	02 c0       	rjmp	.+4      	; 0x894 <__DATA_REGION_LENGTH__+0x94>
 890:	e1 e0       	ldi	r30, 0x01	; 1
 892:	f0 e0       	ldi	r31, 0x00	; 0
 894:	2e 0f       	add	r18, r30
 896:	3f 1f       	adc	r19, r31
 898:	bb 20       	and	r11, r11
 89a:	21 f0       	breq	.+8      	; 0x8a4 <__DATA_REGION_LENGTH__+0xa4>
 89c:	eb 2d       	mov	r30, r11
 89e:	f0 e0       	ldi	r31, 0x00	; 0
 8a0:	31 96       	adiw	r30, 0x01	; 1
 8a2:	02 c0       	rjmp	.+4      	; 0x8a8 <__DATA_REGION_LENGTH__+0xa8>
 8a4:	e0 e0       	ldi	r30, 0x00	; 0
 8a6:	f0 e0       	ldi	r31, 0x00	; 0
 8a8:	2e 0f       	add	r18, r30
 8aa:	3f 1f       	adc	r19, r31
 8ac:	e1 2f       	mov	r30, r17
 8ae:	f0 e0       	ldi	r31, 0x00	; 0
 8b0:	2e 17       	cp	r18, r30
 8b2:	3f 07       	cpc	r19, r31
 8b4:	1c f4       	brge	.+6      	; 0x8bc <__DATA_REGION_LENGTH__+0xbc>
 8b6:	12 1b       	sub	r17, r18
 8b8:	21 2f       	mov	r18, r17
 8ba:	01 c0       	rjmp	.+2      	; 0x8be <__DATA_REGION_LENGTH__+0xbe>
 8bc:	20 e0       	ldi	r18, 0x00	; 0
 8be:	8e 2d       	mov	r24, r14
 8c0:	88 71       	andi	r24, 0x18	; 24
 8c2:	59 f4       	brne	.+22     	; 0x8da <__DATA_REGION_LENGTH__+0xda>
 8c4:	f6 01       	movw	r30, r12
 8c6:	82 2f       	mov	r24, r18
 8c8:	30 e2       	ldi	r19, 0x20	; 32
 8ca:	88 23       	and	r24, r24
 8cc:	19 f0       	breq	.+6      	; 0x8d4 <__DATA_REGION_LENGTH__+0xd4>
 8ce:	31 93       	st	Z+, r19
 8d0:	81 50       	subi	r24, 0x01	; 1
 8d2:	fb cf       	rjmp	.-10     	; 0x8ca <__DATA_REGION_LENGTH__+0xca>
 8d4:	c2 0e       	add	r12, r18
 8d6:	d1 1c       	adc	r13, r1
 8d8:	20 e0       	ldi	r18, 0x00	; 0
 8da:	99 23       	and	r25, r25
 8dc:	29 f0       	breq	.+10     	; 0x8e8 <__DATA_REGION_LENGTH__+0xe8>
 8de:	d6 01       	movw	r26, r12
 8e0:	9c 93       	st	X, r25
 8e2:	f6 01       	movw	r30, r12
 8e4:	31 96       	adiw	r30, 0x01	; 1
 8e6:	6f 01       	movw	r12, r30
 8e8:	51 11       	cpse	r21, r1
 8ea:	0b c0       	rjmp	.+22     	; 0x902 <__stack+0x3>
 8ec:	f6 01       	movw	r30, r12
 8ee:	82 2f       	mov	r24, r18
 8f0:	90 e3       	ldi	r25, 0x30	; 48
 8f2:	88 23       	and	r24, r24
 8f4:	19 f0       	breq	.+6      	; 0x8fc <__DATA_REGION_LENGTH__+0xfc>
 8f6:	91 93       	st	Z+, r25
 8f8:	81 50       	subi	r24, 0x01	; 1
 8fa:	fb cf       	rjmp	.-10     	; 0x8f2 <__DATA_REGION_LENGTH__+0xf2>
 8fc:	c2 0e       	add	r12, r18
 8fe:	d1 1c       	adc	r13, r1
 900:	20 e0       	ldi	r18, 0x00	; 0
 902:	0f 2d       	mov	r16, r15
 904:	06 0f       	add	r16, r22
 906:	9a 81       	ldd	r25, Y+2	; 0x02
 908:	34 2f       	mov	r19, r20
 90a:	30 71       	andi	r19, 0x10	; 16
 90c:	44 ff       	sbrs	r20, 4
 90e:	03 c0       	rjmp	.+6      	; 0x916 <__stack+0x17>
 910:	91 33       	cpi	r25, 0x31	; 49
 912:	09 f4       	brne	.+2      	; 0x916 <__stack+0x17>
 914:	01 50       	subi	r16, 0x01	; 1
 916:	10 16       	cp	r1, r16
 918:	24 f4       	brge	.+8      	; 0x922 <__stack+0x23>
 91a:	09 30       	cpi	r16, 0x09	; 9
 91c:	18 f0       	brcs	.+6      	; 0x924 <__stack+0x25>
 91e:	08 e0       	ldi	r16, 0x08	; 8
 920:	01 c0       	rjmp	.+2      	; 0x924 <__stack+0x25>
 922:	01 e0       	ldi	r16, 0x01	; 1
 924:	ab 01       	movw	r20, r22
 926:	77 ff       	sbrs	r23, 7
 928:	02 c0       	rjmp	.+4      	; 0x92e <__stack+0x2f>
 92a:	40 e0       	ldi	r20, 0x00	; 0
 92c:	50 e0       	ldi	r21, 0x00	; 0
 92e:	fb 01       	movw	r30, r22
 930:	e4 1b       	sub	r30, r20
 932:	f5 0b       	sbc	r31, r21
 934:	a1 e0       	ldi	r26, 0x01	; 1
 936:	b0 e0       	ldi	r27, 0x00	; 0
 938:	ac 0f       	add	r26, r28
 93a:	bd 1f       	adc	r27, r29
 93c:	ea 0f       	add	r30, r26
 93e:	fb 1f       	adc	r31, r27
 940:	8e e2       	ldi	r24, 0x2E	; 46
 942:	a8 2e       	mov	r10, r24
 944:	4b 01       	movw	r8, r22
 946:	80 1a       	sub	r8, r16
 948:	91 08       	sbc	r9, r1
 94a:	0b 2d       	mov	r16, r11
 94c:	10 e0       	ldi	r17, 0x00	; 0
 94e:	11 95       	neg	r17
 950:	01 95       	neg	r16
 952:	11 09       	sbc	r17, r1
 954:	4f 3f       	cpi	r20, 0xFF	; 255
 956:	bf ef       	ldi	r27, 0xFF	; 255
 958:	5b 07       	cpc	r21, r27
 95a:	21 f4       	brne	.+8      	; 0x964 <__stack+0x65>
 95c:	d6 01       	movw	r26, r12
 95e:	ac 92       	st	X, r10
 960:	11 96       	adiw	r26, 0x01	; 1
 962:	6d 01       	movw	r12, r26
 964:	64 17       	cp	r22, r20
 966:	75 07       	cpc	r23, r21
 968:	2c f0       	brlt	.+10     	; 0x974 <__stack+0x75>
 96a:	84 16       	cp	r8, r20
 96c:	95 06       	cpc	r9, r21
 96e:	14 f4       	brge	.+4      	; 0x974 <__stack+0x75>
 970:	81 81       	ldd	r24, Z+1	; 0x01
 972:	01 c0       	rjmp	.+2      	; 0x976 <__stack+0x77>
 974:	80 e3       	ldi	r24, 0x30	; 48
 976:	41 50       	subi	r20, 0x01	; 1
 978:	51 09       	sbc	r21, r1
 97a:	31 96       	adiw	r30, 0x01	; 1
 97c:	d6 01       	movw	r26, r12
 97e:	11 96       	adiw	r26, 0x01	; 1
 980:	7d 01       	movw	r14, r26
 982:	40 17       	cp	r20, r16
 984:	51 07       	cpc	r21, r17
 986:	24 f0       	brlt	.+8      	; 0x990 <__stack+0x91>
 988:	d6 01       	movw	r26, r12
 98a:	8c 93       	st	X, r24
 98c:	67 01       	movw	r12, r14
 98e:	e2 cf       	rjmp	.-60     	; 0x954 <__stack+0x55>
 990:	64 17       	cp	r22, r20
 992:	75 07       	cpc	r23, r21
 994:	39 f4       	brne	.+14     	; 0x9a4 <__stack+0xa5>
 996:	96 33       	cpi	r25, 0x36	; 54
 998:	20 f4       	brcc	.+8      	; 0x9a2 <__stack+0xa3>
 99a:	95 33       	cpi	r25, 0x35	; 53
 99c:	19 f4       	brne	.+6      	; 0x9a4 <__stack+0xa5>
 99e:	31 11       	cpse	r19, r1
 9a0:	01 c0       	rjmp	.+2      	; 0x9a4 <__stack+0xa5>
 9a2:	81 e3       	ldi	r24, 0x31	; 49
 9a4:	f6 01       	movw	r30, r12
 9a6:	80 83       	st	Z, r24
 9a8:	f7 01       	movw	r30, r14
 9aa:	82 2f       	mov	r24, r18
 9ac:	90 e2       	ldi	r25, 0x20	; 32
 9ae:	88 23       	and	r24, r24
 9b0:	19 f0       	breq	.+6      	; 0x9b8 <__stack+0xb9>
 9b2:	91 93       	st	Z+, r25
 9b4:	81 50       	subi	r24, 0x01	; 1
 9b6:	fb cf       	rjmp	.-10     	; 0x9ae <__stack+0xaf>
 9b8:	f7 01       	movw	r30, r14
 9ba:	e2 0f       	add	r30, r18
 9bc:	f1 1d       	adc	r31, r1
 9be:	10 82       	st	Z, r1
 9c0:	80 e0       	ldi	r24, 0x00	; 0
 9c2:	90 e0       	ldi	r25, 0x00	; 0
 9c4:	29 96       	adiw	r28, 0x09	; 9
 9c6:	ec e0       	ldi	r30, 0x0C	; 12
 9c8:	0c 94 e0 05 	jmp	0xbc0	; 0xbc0 <__epilogue_restores__+0xc>

000009cc <__ftoa_engine>:
 9cc:	28 30       	cpi	r18, 0x08	; 8
 9ce:	08 f0       	brcs	.+2      	; 0x9d2 <__ftoa_engine+0x6>
 9d0:	27 e0       	ldi	r18, 0x07	; 7
 9d2:	33 27       	eor	r19, r19
 9d4:	da 01       	movw	r26, r20
 9d6:	99 0f       	add	r25, r25
 9d8:	31 1d       	adc	r19, r1
 9da:	87 fd       	sbrc	r24, 7
 9dc:	91 60       	ori	r25, 0x01	; 1
 9de:	00 96       	adiw	r24, 0x00	; 0
 9e0:	61 05       	cpc	r22, r1
 9e2:	71 05       	cpc	r23, r1
 9e4:	39 f4       	brne	.+14     	; 0x9f4 <__ftoa_engine+0x28>
 9e6:	32 60       	ori	r19, 0x02	; 2
 9e8:	2e 5f       	subi	r18, 0xFE	; 254
 9ea:	3d 93       	st	X+, r19
 9ec:	30 e3       	ldi	r19, 0x30	; 48
 9ee:	2a 95       	dec	r18
 9f0:	e1 f7       	brne	.-8      	; 0x9ea <__ftoa_engine+0x1e>
 9f2:	08 95       	ret
 9f4:	9f 3f       	cpi	r25, 0xFF	; 255
 9f6:	30 f0       	brcs	.+12     	; 0xa04 <__ftoa_engine+0x38>
 9f8:	80 38       	cpi	r24, 0x80	; 128
 9fa:	71 05       	cpc	r23, r1
 9fc:	61 05       	cpc	r22, r1
 9fe:	09 f0       	breq	.+2      	; 0xa02 <__ftoa_engine+0x36>
 a00:	3c 5f       	subi	r19, 0xFC	; 252
 a02:	3c 5f       	subi	r19, 0xFC	; 252
 a04:	3d 93       	st	X+, r19
 a06:	91 30       	cpi	r25, 0x01	; 1
 a08:	08 f0       	brcs	.+2      	; 0xa0c <__ftoa_engine+0x40>
 a0a:	80 68       	ori	r24, 0x80	; 128
 a0c:	91 1d       	adc	r25, r1
 a0e:	df 93       	push	r29
 a10:	cf 93       	push	r28
 a12:	1f 93       	push	r17
 a14:	0f 93       	push	r16
 a16:	ff 92       	push	r15
 a18:	ef 92       	push	r14
 a1a:	19 2f       	mov	r17, r25
 a1c:	98 7f       	andi	r25, 0xF8	; 248
 a1e:	96 95       	lsr	r25
 a20:	e9 2f       	mov	r30, r25
 a22:	96 95       	lsr	r25
 a24:	96 95       	lsr	r25
 a26:	e9 0f       	add	r30, r25
 a28:	ff 27       	eor	r31, r31
 a2a:	ee 53       	subi	r30, 0x3E	; 62
 a2c:	ff 4f       	sbci	r31, 0xFF	; 255
 a2e:	99 27       	eor	r25, r25
 a30:	33 27       	eor	r19, r19
 a32:	ee 24       	eor	r14, r14
 a34:	ff 24       	eor	r15, r15
 a36:	a7 01       	movw	r20, r14
 a38:	e7 01       	movw	r28, r14
 a3a:	05 90       	lpm	r0, Z+
 a3c:	08 94       	sec
 a3e:	07 94       	ror	r0
 a40:	28 f4       	brcc	.+10     	; 0xa4c <__ftoa_engine+0x80>
 a42:	36 0f       	add	r19, r22
 a44:	e7 1e       	adc	r14, r23
 a46:	f8 1e       	adc	r15, r24
 a48:	49 1f       	adc	r20, r25
 a4a:	51 1d       	adc	r21, r1
 a4c:	66 0f       	add	r22, r22
 a4e:	77 1f       	adc	r23, r23
 a50:	88 1f       	adc	r24, r24
 a52:	99 1f       	adc	r25, r25
 a54:	06 94       	lsr	r0
 a56:	a1 f7       	brne	.-24     	; 0xa40 <__ftoa_engine+0x74>
 a58:	05 90       	lpm	r0, Z+
 a5a:	07 94       	ror	r0
 a5c:	28 f4       	brcc	.+10     	; 0xa68 <__ftoa_engine+0x9c>
 a5e:	e7 0e       	add	r14, r23
 a60:	f8 1e       	adc	r15, r24
 a62:	49 1f       	adc	r20, r25
 a64:	56 1f       	adc	r21, r22
 a66:	c1 1d       	adc	r28, r1
 a68:	77 0f       	add	r23, r23
 a6a:	88 1f       	adc	r24, r24
 a6c:	99 1f       	adc	r25, r25
 a6e:	66 1f       	adc	r22, r22
 a70:	06 94       	lsr	r0
 a72:	a1 f7       	brne	.-24     	; 0xa5c <__ftoa_engine+0x90>
 a74:	05 90       	lpm	r0, Z+
 a76:	07 94       	ror	r0
 a78:	28 f4       	brcc	.+10     	; 0xa84 <__ftoa_engine+0xb8>
 a7a:	f8 0e       	add	r15, r24
 a7c:	49 1f       	adc	r20, r25
 a7e:	56 1f       	adc	r21, r22
 a80:	c7 1f       	adc	r28, r23
 a82:	d1 1d       	adc	r29, r1
 a84:	88 0f       	add	r24, r24
 a86:	99 1f       	adc	r25, r25
 a88:	66 1f       	adc	r22, r22
 a8a:	77 1f       	adc	r23, r23
 a8c:	06 94       	lsr	r0
 a8e:	a1 f7       	brne	.-24     	; 0xa78 <__ftoa_engine+0xac>
 a90:	05 90       	lpm	r0, Z+
 a92:	07 94       	ror	r0
 a94:	20 f4       	brcc	.+8      	; 0xa9e <__ftoa_engine+0xd2>
 a96:	49 0f       	add	r20, r25
 a98:	56 1f       	adc	r21, r22
 a9a:	c7 1f       	adc	r28, r23
 a9c:	d8 1f       	adc	r29, r24
 a9e:	99 0f       	add	r25, r25
 aa0:	66 1f       	adc	r22, r22
 aa2:	77 1f       	adc	r23, r23
 aa4:	88 1f       	adc	r24, r24
 aa6:	06 94       	lsr	r0
 aa8:	a9 f7       	brne	.-22     	; 0xa94 <__ftoa_engine+0xc8>
 aaa:	84 91       	lpm	r24, Z
 aac:	10 95       	com	r17
 aae:	17 70       	andi	r17, 0x07	; 7
 ab0:	41 f0       	breq	.+16     	; 0xac2 <__ftoa_engine+0xf6>
 ab2:	d6 95       	lsr	r29
 ab4:	c7 95       	ror	r28
 ab6:	57 95       	ror	r21
 ab8:	47 95       	ror	r20
 aba:	f7 94       	ror	r15
 abc:	e7 94       	ror	r14
 abe:	1a 95       	dec	r17
 ac0:	c1 f7       	brne	.-16     	; 0xab2 <__ftoa_engine+0xe6>
 ac2:	e8 e6       	ldi	r30, 0x68	; 104
 ac4:	f0 e0       	ldi	r31, 0x00	; 0
 ac6:	68 94       	set
 ac8:	15 90       	lpm	r1, Z+
 aca:	15 91       	lpm	r17, Z+
 acc:	35 91       	lpm	r19, Z+
 ace:	65 91       	lpm	r22, Z+
 ad0:	95 91       	lpm	r25, Z+
 ad2:	05 90       	lpm	r0, Z+
 ad4:	7f e2       	ldi	r23, 0x2F	; 47
 ad6:	73 95       	inc	r23
 ad8:	e1 18       	sub	r14, r1
 ada:	f1 0a       	sbc	r15, r17
 adc:	43 0b       	sbc	r20, r19
 ade:	56 0b       	sbc	r21, r22
 ae0:	c9 0b       	sbc	r28, r25
 ae2:	d0 09       	sbc	r29, r0
 ae4:	c0 f7       	brcc	.-16     	; 0xad6 <__ftoa_engine+0x10a>
 ae6:	e1 0c       	add	r14, r1
 ae8:	f1 1e       	adc	r15, r17
 aea:	43 1f       	adc	r20, r19
 aec:	56 1f       	adc	r21, r22
 aee:	c9 1f       	adc	r28, r25
 af0:	d0 1d       	adc	r29, r0
 af2:	7e f4       	brtc	.+30     	; 0xb12 <__ftoa_engine+0x146>
 af4:	70 33       	cpi	r23, 0x30	; 48
 af6:	11 f4       	brne	.+4      	; 0xafc <__ftoa_engine+0x130>
 af8:	8a 95       	dec	r24
 afa:	e6 cf       	rjmp	.-52     	; 0xac8 <__ftoa_engine+0xfc>
 afc:	e8 94       	clt
 afe:	01 50       	subi	r16, 0x01	; 1
 b00:	30 f0       	brcs	.+12     	; 0xb0e <__ftoa_engine+0x142>
 b02:	08 0f       	add	r16, r24
 b04:	0a f4       	brpl	.+2      	; 0xb08 <__ftoa_engine+0x13c>
 b06:	00 27       	eor	r16, r16
 b08:	02 17       	cp	r16, r18
 b0a:	08 f4       	brcc	.+2      	; 0xb0e <__ftoa_engine+0x142>
 b0c:	20 2f       	mov	r18, r16
 b0e:	23 95       	inc	r18
 b10:	02 2f       	mov	r16, r18
 b12:	7a 33       	cpi	r23, 0x3A	; 58
 b14:	28 f0       	brcs	.+10     	; 0xb20 <__ftoa_engine+0x154>
 b16:	79 e3       	ldi	r23, 0x39	; 57
 b18:	7d 93       	st	X+, r23
 b1a:	2a 95       	dec	r18
 b1c:	e9 f7       	brne	.-6      	; 0xb18 <__ftoa_engine+0x14c>
 b1e:	10 c0       	rjmp	.+32     	; 0xb40 <__ftoa_engine+0x174>
 b20:	7d 93       	st	X+, r23
 b22:	2a 95       	dec	r18
 b24:	89 f6       	brne	.-94     	; 0xac8 <__ftoa_engine+0xfc>
 b26:	06 94       	lsr	r0
 b28:	97 95       	ror	r25
 b2a:	67 95       	ror	r22
 b2c:	37 95       	ror	r19
 b2e:	17 95       	ror	r17
 b30:	17 94       	ror	r1
 b32:	e1 18       	sub	r14, r1
 b34:	f1 0a       	sbc	r15, r17
 b36:	43 0b       	sbc	r20, r19
 b38:	56 0b       	sbc	r21, r22
 b3a:	c9 0b       	sbc	r28, r25
 b3c:	d0 09       	sbc	r29, r0
 b3e:	98 f0       	brcs	.+38     	; 0xb66 <__ftoa_engine+0x19a>
 b40:	23 95       	inc	r18
 b42:	7e 91       	ld	r23, -X
 b44:	73 95       	inc	r23
 b46:	7a 33       	cpi	r23, 0x3A	; 58
 b48:	08 f0       	brcs	.+2      	; 0xb4c <__ftoa_engine+0x180>
 b4a:	70 e3       	ldi	r23, 0x30	; 48
 b4c:	7c 93       	st	X, r23
 b4e:	20 13       	cpse	r18, r16
 b50:	b8 f7       	brcc	.-18     	; 0xb40 <__ftoa_engine+0x174>
 b52:	7e 91       	ld	r23, -X
 b54:	70 61       	ori	r23, 0x10	; 16
 b56:	7d 93       	st	X+, r23
 b58:	30 f0       	brcs	.+12     	; 0xb66 <__ftoa_engine+0x19a>
 b5a:	83 95       	inc	r24
 b5c:	71 e3       	ldi	r23, 0x31	; 49
 b5e:	7d 93       	st	X+, r23
 b60:	70 e3       	ldi	r23, 0x30	; 48
 b62:	2a 95       	dec	r18
 b64:	e1 f7       	brne	.-8      	; 0xb5e <__ftoa_engine+0x192>
 b66:	11 24       	eor	r1, r1
 b68:	ef 90       	pop	r14
 b6a:	ff 90       	pop	r15
 b6c:	0f 91       	pop	r16
 b6e:	1f 91       	pop	r17
 b70:	cf 91       	pop	r28
 b72:	df 91       	pop	r29
 b74:	99 27       	eor	r25, r25
 b76:	87 fd       	sbrc	r24, 7
 b78:	90 95       	com	r25
 b7a:	08 95       	ret

00000b7c <__prologue_saves__>:
 b7c:	2f 92       	push	r2
 b7e:	3f 92       	push	r3
 b80:	4f 92       	push	r4
 b82:	5f 92       	push	r5
 b84:	6f 92       	push	r6
 b86:	7f 92       	push	r7
 b88:	8f 92       	push	r8
 b8a:	9f 92       	push	r9
 b8c:	af 92       	push	r10
 b8e:	bf 92       	push	r11
 b90:	cf 92       	push	r12
 b92:	df 92       	push	r13
 b94:	ef 92       	push	r14
 b96:	ff 92       	push	r15
 b98:	0f 93       	push	r16
 b9a:	1f 93       	push	r17
 b9c:	cf 93       	push	r28
 b9e:	df 93       	push	r29
 ba0:	cd b7       	in	r28, 0x3d	; 61
 ba2:	de b7       	in	r29, 0x3e	; 62
 ba4:	ca 1b       	sub	r28, r26
 ba6:	db 0b       	sbc	r29, r27
 ba8:	0f b6       	in	r0, 0x3f	; 63
 baa:	f8 94       	cli
 bac:	de bf       	out	0x3e, r29	; 62
 bae:	0f be       	out	0x3f, r0	; 63
 bb0:	cd bf       	out	0x3d, r28	; 61
 bb2:	09 94       	ijmp

00000bb4 <__epilogue_restores__>:
 bb4:	2a 88       	ldd	r2, Y+18	; 0x12
 bb6:	39 88       	ldd	r3, Y+17	; 0x11
 bb8:	48 88       	ldd	r4, Y+16	; 0x10
 bba:	5f 84       	ldd	r5, Y+15	; 0x0f
 bbc:	6e 84       	ldd	r6, Y+14	; 0x0e
 bbe:	7d 84       	ldd	r7, Y+13	; 0x0d
 bc0:	8c 84       	ldd	r8, Y+12	; 0x0c
 bc2:	9b 84       	ldd	r9, Y+11	; 0x0b
 bc4:	aa 84       	ldd	r10, Y+10	; 0x0a
 bc6:	b9 84       	ldd	r11, Y+9	; 0x09
 bc8:	c8 84       	ldd	r12, Y+8	; 0x08
 bca:	df 80       	ldd	r13, Y+7	; 0x07
 bcc:	ee 80       	ldd	r14, Y+6	; 0x06
 bce:	fd 80       	ldd	r15, Y+5	; 0x05
 bd0:	0c 81       	ldd	r16, Y+4	; 0x04
 bd2:	1b 81       	ldd	r17, Y+3	; 0x03
 bd4:	aa 81       	ldd	r26, Y+2	; 0x02
 bd6:	b9 81       	ldd	r27, Y+1	; 0x01
 bd8:	ce 0f       	add	r28, r30
 bda:	d1 1d       	adc	r29, r1
 bdc:	0f b6       	in	r0, 0x3f	; 63
 bde:	f8 94       	cli
 be0:	de bf       	out	0x3e, r29	; 62
 be2:	0f be       	out	0x3f, r0	; 63
 be4:	cd bf       	out	0x3d, r28	; 61
 be6:	ed 01       	movw	r28, r26
 be8:	08 95       	ret

00000bea <_exit>:
 bea:	f8 94       	cli

00000bec <__stop_program>:
 bec:	ff cf       	rjmp	.-2      	; 0xbec <__stop_program>
